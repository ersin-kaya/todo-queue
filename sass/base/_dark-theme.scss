@use "../abstracts/" as *;

body[data-theme="dark"] {
  color: $body-text-color-dark-theme;
  background-color: $body-background-color-dark-theme;

  // Onboarding modal component
  .onboarding-modal {
    background-color: $onboarding-modal-background-color-dark-theme;
    color: $onboarding-modal-text-color-dark-theme;
  }

  #overlay {
    background-color: $overlay-background-color-dark-theme;
  }

  // Title component
  .title {
    color: $heading-color-default-dark-theme;
    background-color: $title-background-color-dark-theme;
    box-shadow: $title-box-shadow-dark-theme;
  }

  // All tasks component
  .all-tasks {
    background-color: $all-tasks-background-color-dark-theme;
    box-shadow: $all-tasks-box-shadow-dark-theme;

    .task-list-title {
      box-shadow: $all-tasks-task-list-title-box-shadow-dark-theme;
    }

    .empty-state {
      &.empty-state-lists {
        .empty-state-lists-message {
          color: $empty-state-text-color-dark-theme;
        }
      }
    }

    .task-list {
      .list-row {
        &.active-list {
          text-shadow: $all-tasks-active-text-shadow-dark-theme;
          border-bottom-color: $all-tasks-active-border-color-dark-theme;
          border-top-color: $all-tasks-active-border-color-dark-theme;
          background-color: $all-tasks-active-background-color-dark-theme;
        }

        form[data-rename-list-form] {
          input {
            background-color: $all-tasks-rename-list-input-background-color-dark-theme;
            color: $all-tasks-rename-list-input-text-color-dark-theme;
          }
        }
      }
    }

    .new-task-list-creator form {
      input[type="text"].new {
        @include add-item-input($opacity: 0.8, $order: 1);
      }
    }
  }

  // Todo list component
  .todo-list {
    background: $todo-list-background-color-dark-theme;
    color: $todo-list-text-color-dark-theme;
    box-shadow: rgba(255, 255, 255, 0.07) 0px 2px 2px;

    .todo-header {
      background-color: $todo-list-header-background-color-dark-theme;
      box-shadow: rgba(255, 245, 244, 0.3) 0px 0px 0px 2px,
        rgba(255, 245, 244, 0.35) 0px 4px 0px -1px,
        rgba(255, 255, 255, 0.08) 0px 1px 0px inset;
    }

    .todo-body {
      .empty-state {
        &.empty-state-tasks {
          .empty-state-tasks-message {
            color: $empty-state-text-color-dark-theme;
          }
        }
      }

      .tasks {
        .task {
          [type="checkbox"] {
            &:checked + label {
              opacity: 0.8;
            }
          }

          form[data-rename-task-form] {
            textarea {
              background-color: $todo-list-rename-task-input-background-color-dark-theme;
              color: $todo-list-rename-task-input-text-color-dark-theme;
            }
          }
        }
      }

      .new-task-creator form {
        input[type="text"].new {
          @include add-item-input($opacity: 0.8, $order: 1);
        }
      }

      .delete-stuff {
        .btn {
          &.delete {
            @include btn-delete;
            color: $todo-list-delete-buttons-color-dark-theme;
          }
        }
      }
    }
  }

  // Preferences bar
  .preferences-bar {
    background-color: $preferences-bar-background-color-dark-theme;
    border-top: $preferences-bar-border-dark-theme;
    border-bottom: $preferences-bar-border-dark-theme;

    button {
      color: $preferences-bar-button-color-dark-theme;
      background-color: $preferences-bar-button-background-color-dark-theme;
    }
  }
}
